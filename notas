
Para probar

curl -H "Content-Type: application/json" -X POST -d ' {"query":{"term":{"name.autocomplete":"d"}},"facets":{"name":{"terms":{"field":"name"}}}}' http://localhost:9000/alfa


curl -H "Content-Type: application/json" -X POST -d ' {"query":{"term":{"name.autocomplete":"d"}},"facets":{"name":{"terms":{"field":"name"}}}}' http://localhost:9200/santix/items/_search



def alfa = Action.async(parse.json) { request =>

	val response = FinagleClient.longRunningComputation(request.body )  		
	response.map( rest => Ok("Got result: " + rest ))

}

found   : com.twitter.util.Future[play.api.mvc.Result]
required: scala.concurrent.Future[play.api.mvc.Result]

response.map(rest => Ok("Got result: " + rest))


respuesta:


DefaultHttpResponse(chunked: false)
HTTP/1.1 200 OK
Content-Type: application/json; charset=UTF-8
Content-Length: 1547



'use strict'
app = undefined
dependencies = undefined
dependencies = [
  'ngResource'
  'myApp.services'
]
app = angular.module('myApp.controller', dependencies)
app.controller 'ElasticSearchCtrl', [
  '$scope'
  'ElasticSearchQuery'
  '$location'
  ($scope, ElasticSearchQuery, $location) ->

    $scope.onKeyUp = ->

      $scope.term = null
      $scope.jsonResponse = null

      jsonTerm = 
        query: term: 'name.autocomplete': $('#term').val()
        facets: name: terms: field: 'name'
      
      $scope.term = jsonTerm

      ElasticSearchQuery.save {}, jsonTerm, ((response) ->
        console.log 'Success:' + JSON.stringify(response)
        $scope.jsonResponse = response
        #$location.path '/'
        return
      ), (errorResponse) ->
        console.log 'Error:' + JSON.stringify(errorResponse)
        return
      return

    return
]


//"com.typesafe.play"        % "play-slick_2.11"         % "0.8.1"


{"name":"django", "descripcion":"esta es la descripcion", "slug":"este-es-el-slug"}



curl -H "Content-Type: application/json" -X POST -d ' {"name":"django", "description":"esta es la descripcion", "slug":"este-es-el-slug","active":"true"} ' http://localhost:9000/item