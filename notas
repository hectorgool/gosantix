@(message: String)

@main("Welcome to Play") {

    @play20.welcome(message)

}


class Elastisearch
	@searchTerm: ->
		{
			query: term: 'name.autocomplete': $('#term').val()
			facets: name: terms: field: 'name'
		}

Elastisearch.searchTerm()


curl -X POST http://localhost:9000/users -H "Content-Type: application/json" -d "{\"email\": \"test@test.com\"}"

{\"query\":{\"term\":{\"name.autocomplete":\"asdf\"}},"facets":{\"name\":{\"terms\":{\"field":\"name\"}}}}

curl -X POST http://localhost:9000/alfa -H "Content-Type: application/json" -d "{\"query\":{\"term\":{\"name.autocomplete":\"asdf\"}},"facets":{\"name\":{\"terms\":{\"field":\"name\"}}}}"


para probar

curl -H "Content-Type: application/json" -X POST -d ' {"query":{"term":{"name.autocomplete":"d"}},"facets":{"name":{"terms":{"field":"name"}}}}' http://localhost:9000/alfa


curl -H "Content-Type: application/json" -X POST -d ' {"query":{"term":{"name.autocomplete":"d"}},"facets":{"name":{"terms":{"field":"name"}}}}' http://localhost:9200/santix/items/_search



def alfa = Action.async(parse.json) { request =>

	val response = FinagleClient.longRunningComputation(request.body )  		
	response.map( rest => Ok("Got result: " + rest ))

}

found   : com.twitter.util.Future[play.api.mvc.Result]
required: scala.concurrent.Future[play.api.mvc.Result]

response.map(rest => Ok("Got result: " + rest))


respuesta:


DefaultHttpResponse(chunked: false)
HTTP/1.1 200 OK
Content-Type: application/json; charset=UTF-8
Content-Length: 1547





  def findByName(name: String) = Action.async {
    // let's do our query
    val cursor: Cursor[JsObject] = collection.
      // find all people with name `name`
      find(Json.obj("name" -> name)).
      // sort them by creation date
      sort(Json.obj("created" -> -1)).
      // perform the query and get a cursor of JsObject
      cursor[JsObject]

    // gather all the JsObjects in a list
    val futurePersonsList: Future[List[JsObject]] = cursor.collect[List]()

    // transform the list into a JsArray
    val futurePersonsJsonArray: Future[JsArray] = futurePersonsList.map { persons =>
      Json.arr(persons)
    }

    // everything's ok! Let's reply with the array
    futurePersonsJsonArray.map { persons =>
      Ok(persons)
    }
  }


  GET     /users                      @controllers.Users.


  futureScala.map( f => Ok( "Got result: " + f ) )

  val jsonElasticSearchResult = parse( f.getContent.toString(CharsetUtil.UTF_8) )


    response.onSuccess{res =>
      try {
        println("*******************"+ res + "**********************")
        val jsonElasticSearchResult = parse( res.getContent.toString(CharsetUtil.UTF_8) )
        //InboxActor ! ElasticSearchResult( jsonElasticSearchResult )
        NamedCometListener.getDispatchersFor(Full("result")).foreach(actor => actor.map( _ ! ElasticSearchResult( jsonElasticSearchResult ) ))

      } catch {

        case e: JsonParser.ParseException => 
          "Means the string is not valid JSON"
        case m: MappingException => 
          "Means the string is JSON, but doesn't respect the format of Document"
          logger.error(m.getMessage)

      }

      Future.Done

    }.onFailure{

      err =>
        logger.error(err)
        Future.Done
        
    }


    ******el rest funciona:
    http://localhost:9000/alfa
    regresa el json de elasticsearch

    curl -H "Content-Type: application/json" -X POST -d ' {"query":{"term":{"name.autocomplete":"d"}},"facets":{"name":{"terms":{"field":"name"}}}}' http://localhost:9000/alfa

    send json to a controller


    POST   /person                     controllers.Application.createFromJson


  def createFromJson = Action.async(parse.json) { request =>
    
    /*
     * request.body is a JsValue.
     * There is an implicit Writes that turns this JsValue as a JsObject,
     * so you can call insert() with this JsValue.
     * (insert() takes a JsObject as parameter, or anything that can be
     * turned into a JsObject using a Writes.)
     */

    
    request.body.transform(transformer).map { result =>
      collection.insert(result).map { lastError =>
        Logger.debug(s"Successfully inserted with LastError: $lastError")
        Created
      }
    }.getOrElse(Future.successful(BadRequest("invalid json")))
  }











@(message: String)
<!DOCTYPE html>
<html lang="en" ng-app="myApp">
    <head>
      <meta charset="utf-8">
      <meta http-equiv="X-UA-Compatible" content="IE=edge">
      <meta name="viewport" content="width=device-width, initial-scale=1">
      <!-- The above 3 meta tags *must* come first in the head; any other head content must come *after* these tags -->
      <title>Santix</title>
    <link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/bootstrap/3.3.4/css/bootstrap.min.css">
    <link rel="stylesheet" href="@routes.Assets.at("stylesheets/santix.css")">

  </head>
<body ng-controller="mainController">
    
  <div class="container-fluid">

      <nav class="navbar navbar-default navbar-fixed-top" role="navigation">
        <div class="container-fluid">
          <!-- Brand and toggle get grouped for better mobile display -->
          <div class="navbar-header">

            <button type="button" class="navbar-toggle collapsed" data-toggle="collapse" data-target="#bs-example-navbar-collapse-1">
              <span class="sr-only">Toggle navigation</span>
              <span class="icon-bar"></span>
              <span class="icon-bar"></span>
              <span class="icon-bar"></span>
            </button>

            <!--<a class="navbar-brand" href="/">eBrand</a>-->
            
            <!--<a class="navbar-brand" href="/">test</a>-->

          </div>

          <!-- Collect the nav links, forms, and other content for toggling -->
          <div class="collapse navbar-collapse" id="bs-example-navbar-collapse-1">

            <ul class="nav navbar-nav navbar-right">

              <!--
              <li>
                <a href="/cart">
                  <span class="glyphicon glyphicon-shopping-cart"></span>
                  label.cart
                   <span class="label label-danger">69</span>
                </a>
              </li>
            -->

            <!--
              <li>
                <a href="/login">
                  Login
                </a>
              </li>

              <li>
                <a href="/signup">
                  Signup
                </a>
              </li>
            -->

            </ul>

          </div><!-- /.navbar-collapse -->
        </div><!-- /.container-fluid -->
      </nav>

    <div id="row">
        <div class="col-md-12">
                <ul class="nav navbar-nav navbar-right">
                    <li><a href="#/"><i class="fa fa-home"></i> Home </a></li>
                    <li><a href="#/signup"><i class="fa fa-shield"></i> Signup </a></li>
                    <li><a href="#/login"><i class="fa fa-comment"></i> Login </a></li>
                </ul>
            </div>
    </div>

    <hr>
      <div ng-view></div>
    <hr>


  </div>
    

  <script src="/assets/javascripts/lib/jquery.min.js" type="text/javascript"></script>
  <script src="/assets/javascripts/lib/angular.min.js" type="text/javascript"></script>
  <script src="/assets/javascripts/lib/angular-route.min.js" type="text/javascript"></script>
  <script src="/assets/javascripts/lib/angular-resource.min.js" type="text/javascript"></script>
  
  <!--<script src="/assets/javascripts/app.js"></script>-->
  <script src="/assets/javascripts/beta.js"></script>
  <script src="/assets/javascripts/elasticsearch/ElasticSearchCtrl.js"></script>
  <script src="/assets/javascripts/elasticsearch/ElasticSearchServices.js"></script>

</body>
</html>











    <!--search-->
    <div id="row">
        <div class="col-md-12">
        
          <form>
              <div ng-controller="ElasticSearchCtrl">

                  <div class="input-group">
                    <input id="term" 
                      class="form-control input-lg" 
                      ng-keyup="onKeyUp()" 
                      type="text" 
                      placeholder="Search items" 
                      autocomplete="off"
                    >

                      <span class="input-group-addon btn-white">
                        <span class="glyphicon glyphicon-search" aria-hidden="true"></span> 
                        <span ng-if="jsonResponse.hits.total > 0">Hits: {{ jsonResponse.hits.total }}</span> 
                      </span>

                  </div> 

                  <!--<pre> {{ term }}</pre>-->
                  <!--<pre> Hits: {{ jsonResponse.hits.total }}</pre>-->

            <div ng-repeat="j in jsonResponse.hits.hits">
                  <div class="row">
                    <div class="col-md-12">
                      <h3>
                        <a class="link" href="http://localhost:9000/{{j._source.slug}}">
                          <span ng-bind="j._source.name"></span>
                        </a> <small>by</small> 
                        <a class="username" href="http://localhost:9000/{{j._source.slug}}">
                          <span ng-bind="j._source.username"></span>
                        </a>
                      </h3>
                    </div>
                  </div>

                  <div class="row">
                    <div class="col-md-12">
                      <div class="description">
                        <span ng-bind="j._source.description"></span>
                      </div>
                    </div>
                  </div>
                </div>


            <hr>

                <!--<pre> {{ jsonResponse |json }}</pre>-->

              </div>
            </form>
        
        </div>
    </div>
    <!--end:search-->


    